"""Change target_value from Float to String

Revision ID: 55a49dbdff82
Revises: 
Create Date: 2025-05-09 20:42:54.821666

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '55a49dbdff82'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('indicator_categories', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('indicators', schema=None) as batch_op:
        batch_op.alter_column('target_value',
               existing_type=sa.FLOAT(),
               type_=sa.String(length=64),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('indicators', schema=None) as batch_op:
        batch_op.alter_column('target_value',
               existing_type=sa.String(length=64),
               type_=sa.FLOAT(),
               existing_nullable=True)

    with op.batch_alter_table('indicator_categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    # ### end Alembic commands ###
